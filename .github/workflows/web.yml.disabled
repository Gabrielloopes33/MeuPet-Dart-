name: 🌐 Web Build & Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.35.6'

jobs:
  build-web:
    name: 🌐 Build Web
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v4
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🔧 Generate code (if needed)
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter packages pub run build_runner build --delete-conflicting-outputs
          fi

      - name: 🌐 Enable web support
        run: flutter config --enable-web

      - name: 🏗️ Build web
        run: |
          flutter build web --release --web-renderer html
          echo "✅ Web build completed"

      - name: 🔧 Prepare web files
        run: |
          # Add CNAME file if deploying to custom domain
          # echo "your-domain.com" > build/web/CNAME
          
          # Create .nojekyll to prevent GitHub Pages from processing files
          touch build/web/.nojekyll
          
          # Add 404.html for SPA routing
          cp build/web/index.html build/web/404.html
          
          echo "✅ Web files prepared for deployment"

      - name: 📊 Build info
        run: |
          echo "## 🌐 Web Build Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Flutter Version**: ${{ env.FLUTTER_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Type**: Release" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          
          if [ -d "build/web" ]; then
            WEB_SIZE=$(du -sh build/web | cut -f1)
            echo "- **Web Build Size**: $WEB_SIZE" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📦 Upload web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build-${{ github.ref_name }}
          path: build/web/
          retention-days: 30

  deploy-github-pages:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-web
    if: github.ref == 'refs/heads/main'
    environment: production
    
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: 📥 Download web build
        uses: actions/download-artifact@v4
        with:
          name: web-build-${{ github.ref_name }}
          path: ./web-build/

      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./web-build
          cname: # Add your custom domain if you have one

      - name: 📊 Deploy summary
        run: |
          echo "## 🚀 GitHub Pages Deploy Results" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Web app deployed successfully" >> $GITHUB_STEP_SUMMARY
          echo "- 🔗 URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}" >> $GITHUB_STEP_SUMMARY

  deploy-firebase:
    name: 🔥 Deploy to Firebase
    runs-on: ubuntu-latest
    needs: build-web
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production

    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download web build
        uses: actions/download-artifact@v4
        with:
          name: web-build-${{ github.ref_name }}
          path: ./build/web/

      - name: 🔥 Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        continue-on-error: true
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          channelId: live

      - name: 📊 Firebase deploy summary
        run: |
          echo "## 🔥 Firebase Deploy Results" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Web app deployed to Firebase Hosting" >> $GITHUB_STEP_SUMMARY
          echo "- 🔗 Check Firebase Console for live URL" >> $GITHUB_STEP_SUMMARY

  lighthouse-audit:
    name: 🔍 Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: deploy-github-pages
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run Lighthouse audit
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: 📊 Lighthouse summary
        run: |
          echo "## 🔍 Lighthouse Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Performance audit completed" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 Check artifacts for detailed report" >> $GITHUB_STEP_SUMMARY