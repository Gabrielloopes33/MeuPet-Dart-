name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.35.6'
  JAVA_VERSION: '17'

jobs:
  # Stage 1: Code Quality & Testing
  quality-and-test:
    name: 🔍 Quality & Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🧹 Check code formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: 🔎 Run static analysis
        run: flutter analyze --no-fatal-infos --no-fatal-warnings

      - name: 🧪 Run tests
        run: flutter test

      - name: 📊 Generate summary
        if: always()
        run: |
          echo "## 🔍 Quality & Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Code formatting: OK" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Static analysis: OK" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Tests: Passed" >> $GITHUB_STEP_SUMMARY

  # Stage 2: Build Android
  build-android:
    name: 🤖 Build Android
    runs-on: ubuntu-latest
    needs: quality-and-test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    timeout-minutes: 30
    
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🏗️ Build APK
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            flutter build apk --release
            echo "✅ Release APK built"
          else
            flutter build apk --debug
            echo "✅ Debug APK built"
          fi

      - name: 📦 Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ github.run_number }}
          path: build/app/outputs/flutter-apk/*.apk
          retention-days: 30

  # Stage 3: Build Web
  build-web:
    name: 🌐 Build Web
    runs-on: ubuntu-latest
    needs: quality-and-test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    timeout-minutes: 20
    
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🌐 Enable web support
        run: flutter config --enable-web

      - name: 🏗️ Build Web
        run: |
          flutter build web --release
          echo "✅ Web build completed"

      - name: 📦 Upload Web Build
        uses: actions/upload-artifact@v4
        with:
          name: web-build-${{ github.run_number }}
          path: build/web/
          retention-days: 30

  # Stage 4: Deploy (only for tags)
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [build-android, build-web]
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production
    
    steps:
      - name: 📥 Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk-${{ github.run_number }}
          path: ./android/

      - name: 📥 Download Web Build
        uses: actions/download-artifact@v4
        with:
          name: web-build-${{ github.run_number }}
          path: ./web/

      - name: 🚀 Deploy Web to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./web

      - name: 📊 Deploy Summary
        run: |
          echo "## 🚀 Deployment Results" >> $GITHUB_STEP_SUMMARY
          echo "- 🤖 **Android**: APK available in artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 **Web**: Deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
          echo "- 🏷️ **Version**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY

  # Stage 5: Final Status
  status:
    name: 📊 Pipeline Status
    runs-on: ubuntu-latest
    needs: [quality-and-test, build-android, build-web]
    if: always()
    
    steps:
      - name: 📊 Calculate Status
        run: |
          echo "## 📊 CI/CD Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch/Tag**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Event**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Stage Results:" >> $GITHUB_STEP_SUMMARY
          echo "- **Quality & Tests**: ${{ needs.quality-and-test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Android Build**: ${{ needs.build-android.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Web Build**: ${{ needs.build-web.result }}" >> $GITHUB_STEP_SUMMARY