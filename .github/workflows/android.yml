name: 🤖 Android Build & Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

env:
  JAVA_VERSION: '17'
  FLUTTER_VERSION: '3.24.3'

jobs:
  build-android:
    name: 🤖 Build Android
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v4
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🔧 Generate code (if needed)
        run: |
          if grep -q "build_runner" pubspec.yaml; then
            flutter packages pub run build_runner build --delete-conflicting-outputs
          fi

      # Debug Build
      - name: 🏗️ Build Debug APK
        if: ${{ github.event.inputs.build_type == 'debug' || github.event_name == 'pull_request' }}
        run: |
          flutter build apk --debug --no-sound-null-safety
          echo "✅ Debug APK build completed"

      # Release Build (for tags and manual dispatch)
      - name: 🏗️ Build Release APK
        if: ${{ github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/v') }}
        run: |
          flutter build apk --release --no-sound-null-safety
          echo "✅ Release APK build completed"

      - name: 🏗️ Build Release AAB (for Play Store)
        if: ${{ github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/v') }}
        run: |
          flutter build appbundle --release --no-sound-null-safety
          echo "✅ Release AAB build completed"

      # Sign APK (for release builds)
      - name: 🔐 Setup Keystore
        if: ${{ (github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/v')) && github.ref == 'refs/heads/main' }}
        env:
          KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          if [ ! -z "$KEYSTORE_FILE" ]; then
            echo "🔐 Setting up keystore for signing..."
            echo "$KEYSTORE_FILE" | base64 --decode > android/app/keystore.jks
            
            # Create key.properties file
            cat > android/key.properties << EOF
            storePassword=$KEYSTORE_PASSWORD
            keyPassword=$KEY_PASSWORD  
            keyAlias=$KEY_ALIAS
            storeFile=keystore.jks
          EOF
            echo "✅ Keystore configured for signing"
          else
            echo "ℹ️ No keystore secrets found, skipping signing setup"
          fi

      - name: 📊 Build info
        run: |
          echo "## 🤖 Android Build Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Flutter Version**: ${{ env.FLUTTER_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Java Version**: ${{ env.JAVA_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Type**: ${{ github.event.inputs.build_type || 'auto' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            APK_SIZE=$(du -h build/app/outputs/flutter-apk/app-release.apk | cut -f1)
            echo "- **Release APK Size**: $APK_SIZE" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "build/app/outputs/bundle/release/app-release.aab" ]; then
            AAB_SIZE=$(du -h build/app/outputs/bundle/release/app-release.aab | cut -f1)
            echo "- **Release AAB Size**: $AAB_SIZE" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📦 Upload Debug APK
        if: ${{ github.event.inputs.build_type == 'debug' || github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 7

      - name: 📦 Upload Release APK
        if: ${{ github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-${{ github.ref_name }}
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

      - name: 📦 Upload Release AAB
        if: ${{ github.event.inputs.build_type == 'release' || startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v4
        with:
          name: release-aab-${{ github.ref_name }}
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 30

  deploy-play-store:
    name: 🚀 Deploy to Play Store
    runs-on: ubuntu-latest
    needs: build-android
    if: startsWith(github.ref, 'refs/tags/v') && github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download AAB
        uses: actions/download-artifact@v4
        with:
          name: release-aab-${{ github.ref_name }}
          path: ./

      - name: 🚀 Deploy to Play Store (Internal Testing)
        uses: r0adkll/upload-google-play@v1
        continue-on-error: true
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.meupet.app  # Ajuste conforme seu package name
          releaseFiles: app-release.aab
          track: internal
          status: completed
          inAppUpdatePriority: 2

      - name: 📊 Deploy summary
        run: |
          echo "## 🚀 Play Store Deploy Results" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ AAB uploaded to Internal Testing track" >> $GITHUB_STEP_SUMMARY
          echo "- 🔗 Check Google Play Console for review status" >> $GITHUB_STEP_SUMMARY